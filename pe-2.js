/* 

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 

call like --> generateFibonacci(4e6)

*/

function generateFibonacci(n) {
    let arr = [1, 2];
    let evenSumArr = 0;
    let i = 2;
    let continues = true;
    do {
      // actual fibonacci numbers (sum of prev two nums)
      arr[i] = arr[i - 2] + arr[i - 1];
      //. check point to remove values higher than n, 4e6 in our case.
      if (n < arr[i]) {
        continues = false;
        arr.pop();
      }
      // calulate the sum of even numbers
      if (arr[i] % 2 === 0) {
        evenSumArr = evenSumArr + arr[i];
      }
      i++;
    } while (continues);
    // + 2 to account for the starting point index
    return evenSumArr + 2;
  }
  

/*

Alternateive solution idea ðŸ’¡ 

- Every third number is even in Fibonacci series

*/
